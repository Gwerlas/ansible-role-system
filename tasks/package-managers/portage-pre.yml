---
- name: Deployer admin in portage group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    append: true
    groups:
      - portage

- name: Reset SSH connection
  ansible.builtin.meta: reset_connection

- name: Load initial config
  register: system_portage_config_initial
  ansible.builtin.slurp:
    src: /etc/portage/make.conf

- name: Portage configuration directories
  become: true
  ansible.builtin.file:
    path: "/etc/portage/{{ system_portage_directory }}"
    state: directory
    group: portage
    mode: 0775
  loop:
    - package.license
    - package.use
  loop_control:
    loop_var: system_portage_directory

- name: Portage configuration
  become: true
  ansible.builtin.lineinfile:
    path: /etc/portage/make.conf
    line: "{{ system_make_param.line | default(omit) }}"
    regex: "{{ system_make_param.regex }}"
    state: "{{ system_make_param.state | default(omit) }}"
    group: portage
    mode: 0664
  loop:
    - regex: ^USE_PYTHON=
      state: absent
    - regex: ^PYTHON_TARGETS=
      state: absent
    - regex: ^PORTDIR=
      line: "PORTDIR=\"{{ system_portage_directory }}\""
  loop_control:
    loop_var: system_make_param

- name: Packages features flipping (use flags)
  ansible.builtin.copy:
    src: "package.use/{{ package }}"
    dest: "/etc/portage/package.use/{{ package }}"
    owner: "{{ ansible_user_id }}"
    group: portage
    mode: 0664
  loop:
    - kernel
    - python
  loop_control:
    loop_var: package
  notify: emerge --newuse

- name: Check for equery
  ansible.builtin.stat:
    path: /usr/bin/equery
  register: system_bin_equery

- name: Install gentoolkit
  when: not system_bin_equery.stat.exists
  block:
    - name: Portage Ansible module dependencies
      block:
        - name: Check for gentoolkit manifest
          ansible.builtin.stat:
            path: "{{ system_portage_directory }}/app-portage/gentoolkit/Manifest"
          register: system_portage_manifest_equery

        - name: Manual emerge sync
          when: not system_portage_manifest_equery.stat.exists
          become: true
          ansible.builtin.command:
            cmd: emerge --sync
          register: result
          changed_when: result.stdout | regex_search('Number of files. (\\d+)', '\\1') | first | int > 1

        - name: Predefined Portage directory
          ansible.builtin.set_fact:
            system_portage_directory_matches: "{{ system_portage_config_initial.content | b64decode | regex_findall('(?<!#)PORTDIR=\"(.+)\"') }}"

        - name: Initial portage directory
          when: system_portage_directory_matches | length > 0
          block:
            - name: Fact
              ansible.builtin.set_fact:
                system_portage_directory_initial: "{{ system_portage_directory_matches | last }}"

            - name: Remove old directory
              when: system_portage_directory_initial != system_portage_directory
              become: true
              ansible.builtin.file:
                path: "{{ system_portage_directory_initial }}"
                state: absent

        - name: Portage profile
          ansible.builtin.import_tasks: portage-profile.yml

        - name: Package gentoolkit
          become: true
          ansible.builtin.command:
            cmd: emerge app-portage/gentoolkit
          register: result
          changed_when: result.stdout | regex_findall('>>> Installing') | length > 0
