---
- name: Portage - System binaries
  when: "'container' not in ansible_virtualization_tech_guest"
  block:
    - name: Portage - Profile
      ansible.builtin.import_tasks: "{{ role_path }}/tasks/package-managers/portage-profile.yml"

    - name: Portage - Kernel related packages settings
      ansible.builtin.copy:
        src: "{{ system_portage_kernel_file }}"
        dest: "/etc/portage/{{ system_portage_kernel_file }}"
        owner: "{{ ansible_user_id }}"
        group: portage
        mode: "0664"
      loop:
        - package.license/kernel
        - package.use/kernel
      loop_control:
        loop_var: system_portage_kernel_file
      notify: emerge --newuse

    - name: Portage - Kernel package and its dependencies
      become: true
      community.general.portage:
        update: "{{ system_packages_upgrade }}"
        package:
          - sys-kernel/linux-firmware
          - virtual/dist-kernel
      register: system_emerge_kernel
      notify:
        - grub-mkconfig

    - name: Portage - Kernels
      ansible.builtin.find:
        path: /boot
        pattern: vmlinuz-*
      register: system_available_kernels

    - name: Portage - Kernel symlink for external modules
      become: true
      when: system_available_kernels.matched > 0
      ansible.builtin.file:
        src: /usr/src/linux-{{ (system_available_kernels.files | map(attribute='path') | map('regex_search', 'vmlinuz-(.*)', '\1') | last).0 }}
        dest: /usr/src/linux
        state: link
      notify:
        - emerge @module-rebuild

- name: Portage - System update
  when: system_packages_upgrade
  become: true
  community.general.portage:
    deep: true
    newuse: true
    update: true
    package: '@world'
  register: result
  until: result.failed == false
  retries: "{{ system_retries }}"
