---
- name: Packages - Requirements - Portage - Use flags - Get installed Python versions
  ansible.builtin.command:
    cmd: equery -q list -F '$slot' dev-lang/python
  changed_when: false
  register: equery

- name: Packages - Requirements - Portage - Use flags - app-portage/cpuid2cpuflags package
  become: true
  community.general.portage:
    package:
      - app-portage/cpuid2cpuflags
    state: present

- name: Packages - Requirements - Portage - Use flags - CPU Flags
  ansible.builtin.command:
    cmd: cpuid2cpuflags
  register: cpuid2cpuflags
  changed_when: false

- name: Packages - Requirements - Portage - Use flags - Global use flags
  become: true
  vars:
    cpu_flags_key: "{{ cpuid2cpuflags.stdout | split(': ') | first }}"
    cpu_flag_values: "{{ cpuid2cpuflags.stdout | split(': ') | last }}"
    python_targets: "{{ ['python'] | product(equery.stdout_lines | map('replace', '.', '_')) | map('join') | join(' ') }}"
  ansible.builtin.lineinfile:
    path: /etc/portage/make.conf
    line: "{{ line.content | default(omit) }}"
    regex: "{{ line.regex }}"
    state: "{{ line.state | default(omit) }}"
    owner: root
    group: portage
    mode: "0664"
  loop:
    - regex: ^CFLAGS=
      content: CFLAGS="-O2 -pipe -march={{ system_packages_march }}"
    - regex: ^CXXFLAGS=
      content: CXXFLAGS="${CFLAGS}"
    - regex: ^MAKEOPTS=
      content: MAKEOPTS="-j{{ ansible_processor_nproc }}"
    - regex: ^EMERGE_DEFAULT_OPTS=
      content: EMERGE_DEFAULT_OPTS="-j{{ ansible_processor_nproc }} {{ default_portage_opts | join(' ') }}"
    - regex: ^FEATURES=
      content: FEATURES="{{ default_portage_features | join(' ') }}"
    - regex: ^USE_PYTHON=
      state: absent
    - regex: ^PYTHON_TARGETS=
      content: PYTHON_TARGETS="{{ python_targets }}"
    - regex: ^PYTHON_SINGLE_TARGET=
      content: PYTHON_SINGLE_TARGET="{{ python_single_target }}"
    - regex: "^{{ cpu_flags_key }}="
      content: "{{ cpu_flags_key }}=\"{{ cpu_flag_values }}\""
  loop_control:
    loop_var: line
  notify: emerge --newuse
