---
- name: Packages - OS family settings
  ansible.builtin.include_vars: "packages/{{ ansible_os_family | lower }}-like.yml"

- name: Packages - Distribution settings
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution | lower }}.yml"
        - empty.yml
      paths:
        - vars/packages

- name: Packages - Release settings
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}.yml"
        - empty.yml
      paths:
        - vars/packages

- name: Packages - Package manager preparation
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_pkg_mgr }}-pre.yml"
        - empty.yml
      paths:
        - package-managers

- name: Packages - Cache update detection script
  become: true
  ansible.builtin.template:
    src: needs-update.j2
    dest: "{{ system_bin_path }}/needs-update"
    mode: 0755

- name: Packages - Cache update detection
  ansible.builtin.command:
    cmd: needs-update
  register: result
  failed_when: result.rc > 1
  changed_when: result.rc == 1
  notify: cache update

- name: Packages - Cache update
  ansible.builtin.meta: flush_handlers

- name: Packages - Base system tools
  become: true
  ansible.builtin.package:
    name: "{{ system_packages_computed }}"
  register: result
  until: result.failed == false
  retries: "{{ system_retries }}"

- name: Packages - Update
  when:
    - system_packages_upgrade
    - system_packages_upgrade_policy is defined
  become: true
  ansible.builtin.package:
    name: "{{ system_packages_upgrade_policy.name | default(omit) }}"
    state: "{{ system_packages_upgrade_policy.state | default(omit) }}"
    upgrade: "{{ system_packages_upgrade_policy.upgrade | default(omit) }}"
  register: result
  until: result.failed == false
  retries: "{{ system_retries }}"

- name: Packages - Package managers post operations
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_pkg_mgr }}-post.yml"
        - empty.yml
      paths:
        - package-managers

- name: Packages - Reboot if needed
  ansible.builtin.import_tasks: reboot.yml
