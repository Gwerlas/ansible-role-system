#!/usr/bin/env sh
#
# {{ ansible_managed }}
#
# Detection script to determine if the package manager cache need to be updated
#
# Return codes :
#
# 0 = Do not need to update cache
# 1 = Need updating
# 2 = Unmanaged system

set -e

{% if system_pkg_update_cache_policy.path is defined %}
matches=$(find {{ system_pkg_update_cache_policy.path }} -type f -mtime -{{ system_pkg_mgr_cache_age + 1 }} | wc -l)
test $matches -gt 0
{% elif ansible_pkg_mgr == 'apt' %}
# Empty cache
test ! -z "$(apt-cache search rsync)"

# pkgcacke location data
eval $(apt-config shell root Dir)
eval $(apt-config shell cache Dir::Cache)
eval $(apt-config shell pkgcache Dir::Cache::pkgcache)

for file in {{ system_pkg_update_cache_policy.marker | default('') }} "${root}${cache}/${pkgcache}"; do
  if [ -f "$file" ]; then
    # pkgcache age
    mtime=$(stat --printf '%y' "$file")
    ts=$(date +%s -d "$mtime")

    test $ts -gt $(date +%s -d '{{ system_pkg_mgr_cache_age }} days ago')
  fi
done
{% else %}
exit 2
{% endif %}
