#!/usr/bin/env sh
#
# {{ ansible_managed }}
#
# Detection script to determine if the package manager cache need to be updated
#
# Return codes :
#
# 0 = Do not need to update cache
# 1 = Need updating

set -e

test_dir() {
  matches=$(find "$1" -type f -mtime -{{ system_pkg_mgr_cache_age + 1 }} | wc -l)
  test $matches -gt 0  
}

test_file() {
  test -f "$1"

  # pkgcache age
  local mtime=$(stat --printf '%y' "$1")
  local ts=$(date +%s -d "$mtime")

  test $ts -gt $(date +%s -d '{{ system_pkg_mgr_cache_age }} days ago')
}

{% if system_pkg_update_cache_policy.marker is defined %}
test_file "{{ system_pkg_update_cache_policy.marker }}"
{% endif %}

{% if system_pkg_update_cache_policy.path is defined %}
test_dir "{{ system_pkg_update_cache_policy.path }}"
{% endif %}

{% if ansible_pkg_mgr == 'apt' %}
# Empty cache
test ! -z "$(apt-cache search rsync)"

# pkgcacke location data
eval $(apt-config shell root Dir)
eval $(apt-config shell cache Dir::Cache)
eval $(apt-config shell pkgcache Dir::Cache::pkgcache)

test_file "${root}${cache}/${pkgcache}"
{% endif %}
