---
# Runtime
in_container: "{{ 'container' in ansible_virtualization_tech_guest }}"

# Hosts
local_hostnames: |
  {{
    ( [system_hostname] + system_hostnames ) |
    product(['', '.' + system_domain]) |
    map('join')
  }}

local_ips:
  - ip: "127.0.0.1"
    names: ['localhost']
  - ip: "127.0.1.1"
    names: "{{ local_hostnames }}"
  - ip: "::1"
    names: "{{ ['localhost', 'ip6-localhost', 'ip6-loopback'] + local_hostnames }}"

etc_hosts: "{{ local_ips + system_hosts }}"

# Users
users_shells: |
  {{
    system_users |
    rejectattr('system', 'defined') |
    selectattr('shell', 'defined') |
    map(attribute='shell') |
    map('basename') |
    sort |
    unique
  }}

# Networks
networks_types: |
  {{
    system_networks_interfaces |
    selectattr('type', 'defined') |
    map(attribute='type') |
    map('lower') |
    sort |
    unique
  }}

# Packages
desktops:
  - gnome

packages_computed: |
  {{
    ( system_packages
    + packages.common
    + users_shells
    + ((system_profile in packages) | ternary(packages[system_profile], []))
    + (system_packages_upgrade_unattended | ternary(packages.unattended_upgrades | default([]), []))
    + (system_ca_certificates | length > 0) | ternary(packages.ca_certificates, [])
    + (networks_types | intersect(packages.keys() | list) | map('extract', packages))
    + (system_manage_time and time_backend_name in packages) | ternary(packages[time_backend_name], [])
    + (system_manage_storages | ternary(packages.parted | default(['parted']), []))
    + ((system_manage_storages and (system_storages_vg | length) > 0) | ternary(packages.lvm | default(['lvm2']), []))
    + ((system_profile in desktops) | ternary(packages.desktop, []))
    ) | flatten | sort | unique
  }}

# Services
services:
  chrony: chronyd
  ntp: ntpd

# Templates
templates:
  chrony: chrony.conf
  ntp: ntp.conf

# Time
default_time_backend: chrony
time_backend_name: "{{ system_time_backend | default(default_time_backend) }}"
time_backends:
  - chrony
  - ntp
